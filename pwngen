#!/usr/bin/env python3
# Install:
# chmod +x pwngen && sudo mv pwngen /usr/bin/

import sys
import os
from optparse import OptionParser
from stat import *


banner = """\u001b[31m
 ██▓███   █     █░███▄    █   ▄████ ▓█████  ███▄    █
▓██░  ██▒▓█░ █ ░█░██ ▀█   █  ██▒ ▀█▒▓█   ▀  ██ ▀█   █
▓██░ ██▓▒▒█░ █ ░█▓██  ▀█ ██▒▒██░▄▄▄░▒███   ▓██  ▀█ ██▒
▒██▄█▓▒ ▒░█░ █ ░█▓██▒  ▐▌██▒░▓█  ██▓▒▓█  ▄ ▓██▒  ▐▌██▒
▒██▒ ░  ░░░██▒██▓▒██░   ▓██░░▒▓███▀▒░▒████▒▒██░   ▓██░
▒▓▒░ ░  ░░ ▓░▒ ▒ ░ ▒░   ▒ ▒  ░▒   ▒ ░░ ▒░ ░░ ▒░   ▒ ▒
░▒ ░       ▒ ░ ░ ░ ░░   ░ ▒░  ░   ░  ░ ░  ░░ ░░   ░ ▒░
░░         ░   ░    ░   ░ ░ ░ ░   ░    ░      ░   ░ ░
             ░            ░       ░    ░  ░         ░
\033[0m
           \033[4mCause ascii art banners are 1337\033[0m
"""



parser = OptionParser()
parser.add_option("-t", "--target",  dest="binary",   help="Target binary")
parser.add_option("-o", "--outfile", dest="filepath", help="Output path")
(options, args) = parser.parse_args()

if(options.binary == None and options.filepath == None):
    print(banner)
    parser.print_help()
    exit(0)
if(not options.binary):
    sys.stderr.write("[!] --target is required")
    exit(1)

binary = options.binary

filename = "exploit.py"
if(options.filepath != None):
    filename = options.filepath

template = f"""#!/usr/bin/env python3
from pwn import *
import sys

#----------------------------------
#-+-+-+  @0xRoman1   +-+-+-
#----------------------------------

#==============================================================
# =-=-=- PWNTOOLS BOILER PLATE -=-=-=

elf = context.binary = ELF("{binary}")
libc = elf.libc
env = {{}}

gs = '''
continue
'''
def start():
    if args.GDB:
        return gdb.debug(elf.path, gdbscript=gs, env=env)
    elif args.REMOTE:
        return remote(sys.argv[1], int(sys.argv[2]))
    else:
        return process(elf.path, env=env)

io = start()

#==============================================================
# =-=-=- USEFUL VARS -=-=-=

#padding = b"A" *


#==============================================================
# =-=-=- EXPLOITATION -=-=-=



io.interactive()
#==============================================================

"""

if os.path.exists(f"./{filename}"):
    resp = input("File already exists, Do you want to overwrite it? (Y/N): ")
    if(resp.lower() != "y"):
        print("File not created :(")
        exit(0)
f = open(filename, 'w')
f.write(template)
f.close()
os.chmod(filename, S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH)
print("Template Created")
